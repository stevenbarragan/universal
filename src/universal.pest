WHITESPACE = _{ " " | "\t" | "\r" }

NEWLINE = _{ "\n" | ";" }

language = _{ NEWLINE* ~ (module | string | infix | integer | function_call | function_def | variable_def | variable) }

module = { "module" ~ name ~ block ~ NEWLINE* ~ "end" }

integer = @{ NUMBER+ }

function_call = { name ~ "(" ~ function_params ~ ")" }
function_params = { right ~ ("," ~ right)* }

instruction  = _{ infix | integer | function_call | function_def | variable_def | variable }

right = _{ infix | integer | variable }
left = _{ variable_def | variable | integer }
infix = { left ~ message ~ right }
message = { "*" | "/" | "+" | "-" | "=" }

function_def = { "fn" ~ name ~ ("(" ~ params? ~ ")")? ~ ":" ~ results ~ block ~ NEWLINE* ~ "end" }

block = { (NEWLINE* ~ language)+ }

results = { kind ~ ("," ~ kind)* }
params = { param ~ ("," ~ param)* }
param = { variable ~ ":" ~ kind }

variable_def = { variable ~ ":" ~ kind }
variable = { !reserve_word ~ name }
kind = { name }

name = @{ LETTER ~ (LETTER | NUMBER)* }
string = { "\"" ~ string_value ~"\""}
string_value = { (LETTER | NUMBER)* }
reserve_word = _{ "end" | "fn" | "module" }
